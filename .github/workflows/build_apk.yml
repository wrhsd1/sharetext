name: Build Flutter APK

on:
  push:
    branches:
      - main # Or your default branch
  pull_request:
    branches:
      - main # Or your default branch
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write  # 允许创建 release 和上传文件
  packages: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整的提交历史

      # 提取提交信息和版本号
      - name: Extract version info
        id: version
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          COMMIT_HASH=$(git rev-parse --short HEAD)
          BUILD_NUMBER=${{ github.run_number }}
          echo "COMMIT_MESSAGE=${COMMIT_MSG}" >> $GITHUB_ENV
          echo "VERSION_NAME=1.0.${BUILD_NUMBER}-${COMMIT_HASH}" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.29.3'
          cache: true
          
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
            .flutter-plugins
            .flutter-plugins-dependencies
            build
          key: flutter-deps-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            flutter-deps-

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Analyze Flutter code
        run: flutter analyze

      - name: Set up Gradle cache
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Build APK
        run: flutter build apk --release --no-tree-shake-icons

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          tag_name: build-${{ github.run_number }}
          name: Build ${{ env.VERSION_NAME }}
          files: build/app/outputs/flutter-apk/app-release.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: true
          body: |
            Automated build from GitHub Actions
            Version: ${{ env.VERSION_NAME }}
            Build Time: ${{ github.event.repository.updated_at }}
            Commit Message: ${{ env.COMMIT_MESSAGE }}

